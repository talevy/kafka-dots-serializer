buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'net.saliman:gradle-cobertura-plugin:2.2.4'
  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

group = 'org.logstash.dots'
version = '1.0.0-SNAPSHOT'

description = """An example Kafka Serializer that converts messages to dots and vice-versa"""

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
  mavenCentral()
}

dependencies {
  compile(
      ['com.google.guava:guava:16.0.1']
  )

  compile("org.apache.kafka:kafka_2.10:0.8.0") {
    exclude module: 'mail'
    exclude module: 'jms'
    exclude module: 'jmx'
    exclude module: 'jmxtools'
    exclude module: 'jmxri'
  }

  testCompile(
      ['org.testng:testng:6.8.8'],
      ['org.mockito:mockito-all:1.9.5'],
      ['org.uncommons:reportng:1.1.4'],
      ['org.easytesting:fest-assert-core:2.0M10'],
      // workaround for a known issue with TestNG 6.x: explicitly add Guice (Gradle will fail to run tests otherwise)
      ['com.google.inject:guice:3.0']
  )
}

// ensure that test resources (src/test/resources) are added to CLASSPATH;
// see http://forums.gradle.org/gradle/topics/tests_arent_executed_when_setting_the_test_runtimeclasspath and
// http://gradle.org/docs/current/dsl/org.gradle.api.tasks.testing.Test.html#org.gradle.api.tasks.testing.Test:classpath
sourceSets {
  main {
    runtimeClasspath = files(output.resourcesDir) + runtimeClasspath
  }
  test {
    runtimeClasspath = files(output.resourcesDir) + runtimeClasspath
  }
}

test {
  useTestNG() {
    suiteXmlBuilder().suite(name: 'example-kafka-dots-serializer', parallel: 'tests') {
      test (name : 'all-tests') {
        packages {
          'package' (name: 'org.logstash.*')
        }
      }
    }
  }
  options {
    listeners << 'org.uncommons.reportng.HTMLReporter'
    listeners << 'org.uncommons.reportng.JUnitXMLReporter'
  }
  ext.useDefaultListeners = true
  ext.workingDirectory = 'build/'
}

jar {
  manifest {
    attributes 'Implementation-Title': 'Kafka Dots Serializer',
               'Implementation-Version': version
  }
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
  manifest {
    attributes 'Implementation-Title': 'Kafka Dots Serializer',  
               'Implementation-Version': version
  }
  baseName = project.name + '-all'
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
  with jar
}

// See http://www.gradle.org/docs/current/userguide/gradle_wrapper.html
task wrapper(type: Wrapper) {
  description = 'Install Gradle wrapper'
  gradleVersion = '2.3'
}

